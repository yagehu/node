name: Coverage Linux (without intl)

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - lib/**/*.js
      - Makefile
      - src/**/*.cc
      - src/**/*.h
      - test/**
      - tools/gyp/**
      - tools/test.py
      - .github/workflows/coverage-linux-without-intl.yml
      - codecov.yml
      - .nycrc
  push:
    branches:
      - main
    paths:
      - lib/**/*.js
      - Makefile
      - src/**/*.cc
      - src/**/*.h
      - test/**
      - tools/gyp/**
      - tools/test.py
      - .github/workflows/coverage-linux-without-intl.yml
      - codecov.yml
      - .nycrc

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.12'
  FLAKY_TESTS: keep_retrying
  CC: sccache clang
  CXX: sccache clang++
  SCCACHE_GHA_ENABLED: 'true'

permissions:
  contents: read

jobs:
  coverage-linux-without-intl:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938  # v4.2.0
        with:
          persist-credentials: false
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3  # v5.2.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Set up sccache
        uses: mozilla-actions/sccache-action@9e326ebed976843c9932b3aa0e021c6f50310eb4  # v0.0.6
        with:
          version: v0.8.1
      - name: Environment Information
        run: npx envinfo
      - name: Install gcovr
        run: pip install gcovr==7.2
      - name: Build
        run: make build-ci -j4 V=1 CONFIG_FLAGS="--error-on-warn --coverage --without-intl"
      # TODO(bcoe): fix the couple tests that fail with the inspector enabled.
      # The cause is most likely coverage's use of the inspector.
      - name: Test
        run: NODE_V8_COVERAGE=coverage/tmp make test-cov -j4 V=1 TEST_CI_ARGS="-p dots --node-args='--test-reporter=spec' --measure-flakiness 9" || exit 0
      - name: Report JS
        run: npx c8 report --check-coverage
        env:
          NODE_OPTIONS: --max-old-space-size=8192
      - name: Report C++
        run: gcovr --object-directory=out -v --filter src --xml -o ./coverage/coverage-cxx.xml --root=./ --gcov-executable="llvm-cov-18 gcov"
      # Clean temporary output from gcov and c8, so that it's not uploaded:
      - name: Clean tmp
        run: rm -rf coverage/tmp && rm -rf out
      - name: Upload
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238  # v4.6.0
        with:
          directory: ./coverage
          token: ${{ secrets.CODECOV_TOKEN }}
